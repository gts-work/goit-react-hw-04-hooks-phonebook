{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/ContactForm/ContactForm.module.css","components/Title/Title.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/ContactsList/ContactItem.js","components/ContactsList/ContactsList.js","App.js","index.js","components/Filter/Filter.module.css"],"names":["module","exports","Title","title","defaultProps","Fiter","value","onChange","className","styles","title_filter","input_filter","type","shortid","require","ContactForm","onSubmit","useState","id","setId","name","setName","number","setNumber","handleChange","e","currentTarget","reset","nameInputId","generate","numberInputId","form","preventDefault","form_label","htmlFor","label_name","form_input","pattern","required","add_contact_btn","defaultTypes","ContactItem","onDelete","delete_contact_btn","onClick","ContactsList","contacts","console","log","map","PropTypes","shape","App","contactsDate","localStorage","getItem","parsedContacts","JSON","parse","setContacts","filter","setFilter","useEffect","setItem","stringify","isEqualName","find","contact","data","alert","addContact","Filter","normalizedFilter","toLowerCase","includes","getVisibleContacts","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc5d7e54.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"delete_contact_btn\":\"ContactsList_delete_contact_btn__264_c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"form_input\":\"ContactForm_form_input__3foex\",\"label_name\":\"ContactForm_label_name__2Olwv\",\"add_contact_btn\":\"ContactForm_add_contact_btn__3uqxT\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Title = ({ title }) => <h2>{title}</h2>;\n\nTitle.defaultProps = {\n  title: \"Phonebook\",\n};\n\nTitle.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Title;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./Filter.module.css\";\n\nconst Fiter = ({ value, onChange }) => (\n  <label>\n    <span className={styles.title_filter}>Find contacts by name</span>\n    <input\n      className={styles.input_filter}\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n    />\n  </label>\n);\n\nFiter.defaultProps = {\n  value: \"\",\n  onChange: () => {},\n};\n\nFiter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Fiter;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./ContactForm.module.css\";\n\nconst shortid = require(\"shortid\");\n\nexport default function ContactForm({ onSubmit }) {\n  const [id, setId] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(null);\n\n  const handleChange = (e) => {\n    // console.log(\"Form ~ e: \", e.currentTarget);\n    const { name, value, id } = e.currentTarget;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n    }\n\n    setId(id);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit({ id, name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setId(\"\");\n    setName(\"\");\n    setNumber(null);\n  };\n\n  const nameInputId = shortid.generate();\n  const numberInputId = shortid.generate();\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label className={styles.form_label} htmlFor={nameInputId}>\n        <span className={styles.label_name}>Name</span>\n        <input\n          className={styles.form_input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          id={nameInputId}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n\n      <label className={styles.form_label} htmlFor={numberInputId}>\n        <span className={styles.label_name}>Number</span>\n        <input\n          className={styles.form_input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          id={numberInputId}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n\n      <button className={styles.add_contact_btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.defaultTypes = {\n  onSubmit: () => {},\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./ContactsList.module.css\";\n\nconst ContactItem = ({ id, name, number, onDelete }) => (\n  <tr key={id}>\n    <td>{name}</td>\n    <td>{number}</td>\n    <td>\n      <button\n        className={styles.delete_contact_btn}\n        value={id}\n        onClick={onDelete}\n      >\n        Delete\n      </button>\n    </td>\n  </tr>\n);\n\nContactItem.defaultProps = {\n  onDelete: () => {},\n  id: \"\",\n  name: \"\",\n  number: 0,\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.number,\n  onDelete: PropTypes.func,\n};\n\nexport default ContactItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport ContactItem from \"./ContactItem\";\n\nconst ContactsList = ({ contacts, onDelete }) => {\n  console.log(\"ContactsList ~ contacts: \", contacts);\n\n  return (\n    <div>\n      <h3>Contacts</h3>\n      <table>\n        <thead>\n          <tr>\n            <td>Name</td>\n            <td>Phone</td>\n          </tr>\n        </thead>\n        <tbody>\n          {contacts.map(({ id, name, number }) => (\n            <ContactItem\n              id={id}\n              name={name}\n              number={number}\n              onDelete={onDelete}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nContactsList.defaultProps = {\n  onDelete: () => {},\n  contacts: PropTypes.shape({\n    id: \"\",\n    name: \"\",\n    number: 0,\n  }),\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    number: PropTypes.number,\n  }),\n  onDelete: PropTypes.func,\n};\n\nexport default ContactsList;\n","import React, { useState, useEffect } from \"react\";\n\nimport Title from \"./components/Title\";\nimport Filter from \"./components/Filter\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactsList from \"./components/ContactsList\";\n\n// import contacts from \"./data/contacts.json\";\n\nexport default function App() {\n  const [contacts, setContacts] = useState(() => {\n    const contactsDate = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contactsDate);\n\n    if (parsedContacts) {\n      return parsedContacts;\n    } else {\n      return [];\n    }\n  });\n  const [filter, setFilter] = useState(\"\");\n\n  console.log(\"contacts = useState ~ contacts: \", contacts);\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = (id, name, number) => {\n    if (!isEqualName(name)) {\n      const contact = { id, name, number };\n      setContacts([contact, ...contacts]);\n    } else {\n      alert(`${name} is already in contacts`);\n    }\n  };\n\n  const onSubmit = (data) => {\n    const { id, name, number } = data;\n\n    console.log(\"App ~ ID: \", id);\n    console.log(\"App ~ name: \", name);\n\n    addContact(id, name, number);\n  };\n\n  const changeFilter = (e) => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const isEqualName = (name) => {\n    console.log(\"EQUAL: \", name);\n    return contacts.find((contact) => contact.name === name);\n  };\n\n  const handleDelete = (e) => {\n    const contactId = e.currentTarget.value;\n\n    console.log(\"DELETE: \", contactId);\n\n    setContacts(contacts.filter((contact) => contact.id !== contactId));\n  };\n\n  return (\n    <div className=\"container\">\n      <Title title=\"Phonebook\" />\n      <ContactForm onSubmit={onSubmit} />\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactsList contacts={getVisibleContacts()} onDelete={handleDelete} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title_filter\":\"Filter_title_filter__HU21B\",\"input_filter\":\"Filter_input_filter__cpY52\"};"],"sourceRoot":""}